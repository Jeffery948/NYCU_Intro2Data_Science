install.packages("ggplot2")
print("2")
print(2)
install.packages("rvest")
台灣五十現金股利資料 <- html_nodes(台灣五十現金股利, "chartjs-render-monitor")
html_text(台灣五十現金股利資料)
台灣五十現金股利數據資料 <- as.numeric(台灣五十現金股利資料)
library(rvest)
url <- "https://tw.stock.yahoo.com/quote/0050/dividend"
台灣五十現金股利 <- read_html(url)
台灣五十現金股利資料 <- html_nodes(台灣五十現金股利, "chartjs-render-monitor")
html_text(台灣五十現金股利資料)
台灣五十現金股利數據資料 <- as.numeric(html_text(台灣五十現金股利資料))
台灣五十現金股利數據資料
library(rvest)
url <- "https://tw.stock.yahoo.com/d/s/dividend_0050.html "
台灣五十現金股利 <- read_html(url)
url <- "https://tw.stock.yahoo.com/d/s/dividend_0050.html"
library(rvest)
url <- "https://tw.stock.yahoo.com/d/s/dividend_0050.html"
台灣五十現金股利 <- read_html(url)
台灣五十現金股利資料 <- html_nodes(台灣五十現金股利, "chartjs-render-monitor")
html_text(台灣五十現金股利資料)
台灣五十現金股利數據資料 <- as.numeric(html_text(台灣五十現金股利資料))
台灣五十現金股利數據資料
library(rvest)
url <- "https://tw.stock.yahoo.com/d/s/dividend_0050.html"
台灣五十現金股利 <- read_html(url)
台灣五十現金股利資料 <- html_nodes(台灣五十現金股利, "tr+ tr td:nth-child(3)")
html_text(台灣五十現金股利資料)
台灣五十現金股利數據資料 <- as.numeric(html_text(台灣五十現金股利資料))
台灣五十現金股利數據資料
library(rvest)
url <- "https://tw.stock.yahoo.com/d/s/dividend_0050.html"
台灣五十現金股利 <- read_html(url)
台灣五十現金股利資料 <- html_nodes(台灣五十現金股利, "#app , #app > div , #app > div > div , #render-target-default")
html_text(台灣五十現金股利資料)
台灣五十現金股利數據資料 <- as.numeric(html_text(台灣五十現金股利資料))
台灣五十現金股利數據資料
library(rvest)
url <- "https://tw.stock.yahoo.com/d/s/dividend_0050.html"
台灣五十現金股利 <- read_html(url)
台灣五十現金股利資料 <- html_nodes(台灣五十現金股利, "atomic .Ta\(end\)")
library(rvest)
url <- "https://tw.stock.yahoo.com/d/s/dividend_0050.html"
台灣五十現金股利 <- read_html(url)
台灣五十現金股利資料 <- html_nodes(台灣五十現金股利, "atomic .Ta")
html_text(台灣五十現金股利資料)
台灣五十現金股利數據資料 <- as.numeric(html_text(台灣五十現金股利資料))
台灣五十現金股利數據資料
library(rvest)
url <- "https://tw.stock.yahoo.com/quote/0050.TW/dividend"
台灣五十現金股利 <- read_html(url)
台灣五十現金股利資料 <- html_nodes(台灣五十現金股利, "Pos(r) Ov(h)")
library(rvest)
url <- "https://tw.stock.yahoo.com/d/s/dividend_0050.html"
台灣五十現金股利 <- read_html(url)
台灣五十現金股利資料 <- html_nodes(台灣五十現金股利, "tr+ tr td:nth-child(3)")
html_text(台灣五十現金股利資料)
台灣五十現金股利數據資料 <- as.numeric(html_text(台灣五十現金股利資料))
台灣五十現金股利數據資料
library(rvest)
url <- "https://tw.stock.yahoo.com/d/s/dividend_0050.html"
台灣五十現金股利 <- read_html(url)
台灣五十現金股利
#第一題
library(tm)
library(magrittr)
speech <- readLines("Elon_Musk_interview.txt")
corpus <- VCorpus(VectorSource(speech))
corpusSW <- tm_map(corpus, stripWhitespace)
corpusTL <- tm_map(corpusSW, content_transformer(tolower))
corpusRN <- tm_map(corpusTL, removeNumbers)
corpusRP <- tm_map(corpusRN, removePunctuation)
corpusRW <- tm_map(corpusRP , removeWords, stopwords("english"))
tdm <- TermDocumentMatrix(corpusRW) %>% as.matrix()
tdmsort <- rowSums(tdm) %>% sort(decreasing = T)
Words <- names(tdmsort)
tdmDF <- data.frame(freq = tdmsort)
requestDF <- head(tdmDF, size=6)
requestDF
requestWords <- head(Words, size = 6)
出現次數前六多的字彙之長條圖 <- barplot(requestDF$freq, names.arg = requestWords,
main = '出現次數前六多的字彙之長條圖',
ylab = '出現次數', xlab = '字彙',
ylim = c(0, 50))
text(x = 出現次數前六多的字彙之長條圖, y = requestDF$freq,
labels = requestDF$freq, pos = 3)
#第二題
KB <- read.csv('KB.csv', header = T, sep = ',')
KB_Ef <- ((KB$PTS+KB$TRB+KB$AST+KB$STL+KB$BLK)-((KB$FGA-KB$FG)+(KB$FTA-KB$FT)+KB$TOV))/KB$G
KB_Ef <- mean(KB_Ef)
MJ <- read.csv('MJ.csv', header = T, sep = ',')
MJ_Ef <- ((MJ$PTS+MJ$TRB+MJ$AST+MJ$STL+MJ$BLK)-((MJ$FGA-MJ$FG)+(MJ$FTA-MJ$FT)+MJ$TOV))/MJ$G
MJ_Ef <- mean(MJ_Ef)
LJ <- read.csv('LJ.csv', header = T, sep = ',')
LJ_Ef <- ((LJ$PTS+LJ$TRB+LJ$AST+LJ$STL+LJ$BLK)-((LJ$FGA-LJ$FG)+(LJ$FTA-LJ$FT)+LJ$TOV))/LJ$G
LJ_Ef <- mean(LJ_Ef)
三人NBA生涯績效值長條圖 <- barplot(c(MJ_Ef, KB_Ef, LJ_Ef),
names.arg = c('Michael Jordan', 'Kobe Bryant', 'Lebron James'),
main = '三人NBA生涯績效值長條圖',
ylab = '績效值', xlab = '球員',
ylim = c(0, 0.6))
text(x = 三人NBA生涯績效值長條圖, y = c(MJ_Ef, KB_Ef, LJ_Ef),
labels = round(c(MJ_Ef, KB_Ef, LJ_Ef), 2), pos = 3)
library(tidyverse)
library(cluster)
red_wine <- read.csv(file = 'winequality-red.csv', header = TRUE, sep = ',')
setwd("C:/Users/user/Desktop/NYCU/數據科學概論/hw")
red_wine <- read.csv(file = 'winequality-red.csv', header = TRUE, sep = ',')
dim(red_wine)
dis = dist(red_wine, method = 'euclidean', diag = T)
dis
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(4,12.5,7,12.5, col="green")
names = red_wine[,1]
data = red_wine[,-1]
rownames(data) = names
red_wine <- read.csv(file = 'winequality-red.csv', header = TRUE, sep = ',')
dis = dist(head(red_wine, 10), method = 'euclidean', diag = T)
dis = dist(head(red_wine, 10), method = 'euclidean', diag = T)
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(4,12.5,7,12.5, col="green")
dis = dist(red_wine$free.sulfur.dioxide, method = 'euclidean', diag = T)
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(4,12.5,7,12.5, col="green")
dis = dist(red_wine$quality, method = 'euclidean', diag = T)
dis = dist(unique(red_wine$quality), method = 'euclidean', diag = T)
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(4,12.5,7,12.5, col="green")
dis = dist(unique(red_wine$free.sulfur.dioxide), method = 'euclidean', diag = T)
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(4,12.5,7,12.5, col="green")
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(4,6,7,6, col="green")
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(7,6,9,6, col="green")
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(7,6,13,6, col="green")
dis = dist(unique(red_wine$free.sulfur.dioxide), method = 'euclidean', diag = T)
rownames(dis) = names(unique(red_wine$free.sulfur.dioxide))
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(7,6,13,6, col="green")
data = unique(red_wine$free.sulfur.dioxide)
rownames(dis) = names(unique(red_wine$free.sulfur.dioxide))
rownames(data) = names(unique(red_wine$free.sulfur.dioxide))
rownames(data) = names(unique(red_wine$free.sulfur.dioxide))
dis = dist(data, method = 'euclidean', diag = T)
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(7,6,13,6, col="green")
dim(data)
install.packages("dplyr")
install.packages("dplyr")
data <- red_wine %>%
group_by(free.sulfur.dioxide) %>%
summarise_all(mean, na.rm = TRUE)
rownames(data) = data[, 1]
table(data$free.sulfur.dioxide)
dis = dist(data, method = 'euclidean', diag = T)
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(7,6,13,6, col="green")
dim(data)
name = data[, 1]
rownames(data) = name
length(name)
data = data[, -1]
rownames(data) = name
data = table(data)
data = table(data[, -1])
data <- red_wine %>%
group_by(free.sulfur.dioxide) %>%
summarise_all(mean, na.rm = TRUE)
name = data[, 1]
data = data[, -1]
length(data)
name2 = list(name)
length(name2)
red_wine <- read.csv(file = 'winequality-red.csv', header = TRUE, sep = ',')
data <- red_wine %>%
group_by(free.sulfur.dioxide) %>%
summarise_all(mean, na.rm = TRUE)
name = data[, 1]
data = data[, -1]
data
names(data) = name
dis = dist(data, method = 'euclidean', diag = T)
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(7,6,13,6, col="green")
names(data) = str(name)
dis = dist(data, method = 'euclidean', diag = T)
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(7,6,13,6, col="green")
data <- red_wine %>%
group_by(free.sulfur.dioxide) %>%
summarise_all(mean, na.rm = TRUE)
name = str(data[, 1])
name = data[, 1]
names(data) = "a"
data
data = data[, -1]
data = data[, -1]
names(data) = "a"
data
name = as.character(data[, 1])
data <- red_wine %>%
group_by(free.sulfur.dioxide) %>%
summarise_all(mean, na.rm = TRUE)
name = as.character(data[, 1])
data = data[, -1]
names(data) = name
data
dis = dist(data, method = 'euclidean', diag = T)
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(7,6,13,6, col="green")
type(data)
red_wine <- read.table(file = 'winequality-red.csv', header = TRUE, sep = ',')
data <- red_wine %>%
group_by(free.sulfur.dioxide) %>%
summarise_all(mean, na.rm = TRUE)
red_wine <- read.csv(file = 'winequality-red.csv', header = TRUE, sep = ',')
data <- red_wine %>%
group_by(free.sulfur.dioxide) %>%
summarise_all(mean, na.rm = TRUE)
name = as.character(data[, 1])
data = data[, -1]
length(name)
names(data) = name
table(data)
head(table, 10)
data <- red_wine %>%
group_by(free.sulfur.dioxide) %>%
summarise_all(mean, na.rm = TRUE)
name = as.character(data[, 1])
data = data[, -1]
name
name = c(1, 2, 3, 4, 5, 5.5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 37.5, 38, 39, 40, 40.5, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 66, 68, 72)
names(data) = name
data
dis = dist(data, method = 'euclidean', diag = T)
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(7,6,13,6, col="green")
View(red_wine)
View(red_wine)
View(red_wine)
View(red_wine)
red_wine <- read.csv(file = 'winequality-red.csv', header = TRUE, sep = ',')
dis = dist(data, method = 'euclidean', diag = T)
dis = dist(red_wine, method = 'euclidean', diag = T)
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(4,12.5,7,12.5, col="green")
data <- red_wine %>%
group_by(free.sulfur.dioxide) %>%
summarise_all(mean, na.rm = TRUE)
dis = dist(data, method = 'euclidean', diag = T)
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(7,6,13,6, col="green")
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(20,23,24,23, col="green")
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(33,23,37,23, col="green")
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(30,23,34,23, col="green")
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(31,23,35,23, col="green")
summary(data)
str(data)
single_linkage_track = hclust(dis, method = "single")
plot(single_linkage_track,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Single Linkage", cex=0.5, ylab="Distance")
segments(31,23,35,23, col="green")
complete_linkage_track = hclust(dis,  method = "complete")
plot(complete_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Complete Linkage", cex=0.5, ylab="Distance")
abline(h=35, col="red")
complete_linkage_track = hclust(dis,  method = "complete")
plot(complete_linkage_track,  sub="",xlab="Country", main="Cluster Dendrogram using Complete Linkage", cex=0.5, ylab="Distance")
abline(h=40, col="red")
complete_linkage_track = hclust(dis,  method = "complete")
plot(complete_linkage_track,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Complete Linkage", cex=0.5, ylab="Distance")
abline(h=40, col="red")
avg_linkage = hclust(dis, method = "average")
plot(avg_linkage,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Average Linkage", cex=0.5, ylab="Distance")
segments(1,18,25,18, col="red")
segments(50,35,55,35, col="red")
avg_linkage = hclust(dis, method = "average")
plot(avg_linkage,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Average Linkage", cex=0.5, ylab="Distance")
segments(5,70,30,70, col="red")
segments(50,35,55,35, col="red")
avg_linkage = hclust(dis, method = "average")
plot(avg_linkage,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Average Linkage", cex=0.5, ylab="Distance")
segments(1,70,24,70, col="red")
segments(50,35,55,35, col="red")
avg_linkage = hclust(dis, method = "average")
plot(avg_linkage,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Average Linkage", cex=0.5, ylab="Distance")
segments(3,70,27,70, col="red")
segments(50,35,55,35, col="red")
avg_linkage = hclust(dis, method = "average")
plot(avg_linkage,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Average Linkage", cex=0.5, ylab="Distance")
segments(3,70,26,70, col="red")
segments(50,35,55,35, col="red")
avg_linkage = hclust(dis, method = "average")
plot(avg_linkage,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Average Linkage", cex=0.5, ylab="Distance")
segments(3,70,27,70, col="red")
segments(50,35,55,35, col="red")
avg_linkage = hclust(dis, method = "average")
plot(avg_linkage,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Average Linkage", cex=0.5, ylab="Distance")
segments(3,70,27,70, col="red")
segments(1,200,3,200, col="red")
avg_linkage = hclust(dis, method = "average")
plot(avg_linkage,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Average Linkage", cex=0.5, ylab="Distance")
segments(3,70,27,70, col="red")
segments(-1,200,1,200, col="red")
avg_linkage = hclust(dis, method = "average")
plot(avg_linkage,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Average Linkage", cex=0.5, ylab="Distance")
segments(3,70,27,70, col="red")
segments(-1,200,3,200, col="red")
ward_linkage = hclust(dis, method = "ward.D")
plot(ward_linkage,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Ward's method", cex=0.5, ylab="Distance")
segments(5,80,33,80, col="green")
segments(43,200,70,200, col="green")
ward_linkage = hclust(dis, method = "ward.D")
plot(ward_linkage,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Ward's method", cex=0.5, ylab="Distance")
segments(1,300,13,300, col="green")
segments(43,200,70,200, col="green")
ward_linkage = hclust(dis, method = "ward.D")
plot(ward_linkage,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Ward's method", cex=0.5, ylab="Distance")
segments(1,300,13,300, col="green")
segments(20,400,40,400, col="green")
ward_linkage = hclust(dis, method = "ward.D")
plot(ward_linkage,  sub="",xlab="free sulfur dioxide", main="Cluster Dendrogram using Ward's method", cex=0.5, ylab="Distance")
segments(1,300,13,300, col="green")
segments(15,400,40,400, col="green")
km3 = kmeans(data, 3)
km3$cluster
name = as.character(data[, 1]); name
names(data) <- c(1, 2, 3, 4, 5, 5.5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 37.5, 38, 39, 40, 40.5, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 66, 68, 72)
km3 = kmeans(data, 3)
km3$cluster
names(data) <- c("1", 2, 3, 4, 5, 5.5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 37.5, 38, 39, 40, 40.5, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 66, 68, 72)
km3 = kmeans(data, 3)
km3$cluster
name = c(1, 2, 3, 4, 5, 5.5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 37.5, 38, 39, 40, 40.5, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 66, 68, 72)
result <- data.frame(Object = name, Cluster = km3$cluster)
result
km4 = kmeans(data, 4)
result <- data.frame(Object = name, Cluster = km4$cluster)
result
print(result, result2, result3)
result <- data.frame(Object = name, Cluster = km3$cluster)
km4 = kmeans(data, 4)
result2 <- data.frame(Object = name, Cluster = km4$cluster)
km5 = kmeans(data, 5)
result3 <- data.frame(Object = name, Cluster = km5$cluster)
print(result, result2, result3)
print(result+result2+result3)
cbind(result, result2, result3)
clusplot(data[,-1], km3$cluster, color = T, shade = T, labels = 2, main = "K-menas Clustering for K=3")
clusplot(data[,-1], km4$cluster, color = T, shade = T, labels = 2, main = "K-menas Clustering for K=4")
clusplot(data[,-1], km5$cluster, color = T, shade = T, labels = 2, main = "K-menas Clustering for K=5")
sil_3 = silhouette(km3$cluster, dis)
plot(sil_3, main = "Silhouette plot for 3-means",  col = c("red", "green", "blue"))
sil_4 = silhouette(km4$cluster, dis)
plot(sil_4, main = "Silhouette plot for 4-means",  col = c("red", "green", "blue", "purple"))
sil_5 = silhouette(km5$cluster, dis)
plot(sil_5, main = "Silhouette plot for 5-means",  col = c("red", "green", "blue", "purple", "orange"))
km2=kmeans(data,centers = 2)
Silkm2=silhouette(km2$cluster,dist(data))
plot(Silkm2,main = "silhouette of kmean with k=2",col = c("red", "green"))
Silhclsinglek2 <- silhouette(cutree(single_linkage_track,k=2),dist(data))
plot(Silhclsinglek2,main = "silhouette of hierarchical single linkage with k=2",col = c("red", "green"))
Silhclcompletek2 <- silhouette(cutree(complete_linkage_track,k=2),dist(data))
plot(Silhclcompletek2,main = "Silhouette of hierarchical complete linkage with k=2",col = c("red", "green"))
SilhclwardDk2 <- silhouette(cutree(avg_linkage,k=2),dist(data))
plot(SilhclwardDk2,main = "Silhouette of hierarchical average linkage with k=2",col = c("red", "green"))
SilhclwardDk2 <- silhouette(cutree(ward_linkage,k=2),dist(data))
plot(SilhclwardDk2,main = "Silhouette of hierarchical ward.D linkage with k=2",col = c("red", "green"))
Silhclsinglek2 <- silhouette(cutree(single_linkage_track,k=3),dist(data))
plot(Silhclsinglek2,main = "silhouette of hierarchical single linkage with k=3",col = c("red", "green","blue"))
Silhclcompletek3 <- silhouette(cutree(complete_linkage_track,k=3),dist(data))
plot(Silhclcompletek3,main = "Silhouette of hierarchical complete linkage with k=3",col = c("red", "green", "blue"))
Silhclaveragek3 <- silhouette(cutree(avg_linkage_track,k=3),dist(data))
Silhclaveragek3 <- silhouette(cutree(avg_linkage,k=3),dist(data))
plot(Silhclaveragek3,main = "Silhouette of hierarchical average linkage with k=3",col = c("red", "green", "blue"))
SilhclwardDk3 <- silhouette(cutree(ward_linkage,k=3),dist(data))
plot(SilhclwardDk3,main = "Silhouette of hierarchical ward.D linkage with k=3",col = c("red", "green", "blue"))
km3=kmeans(data,centers = 3)
Silkm3=silhouette(km3$cluster,dist(data))
plot(Silkm3,main = "silhouette of kmean with k=3",col = c("red", "green", "blue"))
View(red_wine)
